version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_client
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    build:
      context: ./backend/api-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_client
    depends_on:
      - db

  processor:
    build:
      context: ./backend/processor-service
      dockerfile: Dockerfile
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db_client
      - QUERY_LISTENER_CHECK_INTERVAL=60
      - QUERY_LISTENER_LOG_LEVEL=INFO
      - DEFAULT_EXPORT_LOCATION=/app/exports
      - TMP_EXPORT_LOCATION=/app/tmp/exports
    volumes:
      - ./exports:/app/exports
      - ./tmp:/app/tmp
    depends_on:
      - db
      - api

  oracle:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    environment:
      ORACLE_PWD: oracle123
      ORACLE_CHARACTERSET: AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./docker/oracle/init:/docker-entrypoint-initdb.d/startup
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/oracle123@//localhost:1521/XE as sysdba", "@/docker-entrypoint-initdb.d/startup/healthcheck.sql"]
      interval: 30s
      timeout: 10s
      retries: 5

  sshtest:
    build:
      context: ./docker/sshtest
      dockerfile: Dockerfile
    container_name: db_client_sshtest
    environment:
      - SSH_USER=testuser
      - SSH_PASSWORD=testpass
    ports:
      - "2222:22"
    volumes:
      - ./exports:/home/testuser/shared
    networks:
      - db_client_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/usr/sbin/sshd", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  db_client_network:
    driver: bridge

volumes:
  postgres_data:
  oracle_data: 