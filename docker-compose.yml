version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-dbclient}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - db_client_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: backend/api-service/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DB_POSTGRES_SERVER=postgres
      - DB_POSTGRES_USER=${DB_USER:-postgres}
      - DB_POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_POSTGRES_DB=${DB_NAME:-dbclient}
      - DB_POSTGRES_PORT=5432
      - API_V1_STR=/api/v1
      - SECURITY_SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - SECURITY_ACCESS_TOKEN_EXPIRE_MINUTES=43200
    networks:
      - db_client_network
    depends_on:
      postgres:
        condition: service_healthy

  processor:
    build:
      context: .
      dockerfile: backend/processor-service/Dockerfile
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DB_POSTGRES_SERVER=postgres
      - DB_POSTGRES_USER=${DB_USER:-postgres}
      - DB_POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_POSTGRES_DB=${DB_NAME:-dbclient}
      - DB_POSTGRES_PORT=5432
      - SECURITY_SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - SECURITY_ACCESS_TOKEN_EXPIRE_MINUTES=43200
      - QUERY_GLOBAL_MAX_PARALLEL_QUERIES=50
      - QUERY_QUERY_LISTENER_CHECK_INTERVAL=10
      - QUERY_QUERY_LISTENER_LOG_LEVEL=INFO
      - SCP_SCP_HOST=sshtest
      - SCP_SCP_PORT=22
      - SCP_SCP_USER=${SSH_USER:-testuser}
      - SCP_SCP_PASSWORD=${SSH_PASSWORD:-testpass}
    networks:
      - db_client_network
    depends_on:
      postgres:
        condition: service_healthy

  oracle:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    environment:
      ORACLE_PWD: oracle123
      ORACLE_CHARACTERSET: AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./docker/oracle/init:/docker-entrypoint-initdb.d/startup
    networks:
      - db_client_network
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/oracle123@//localhost:1521/XE as sysdba", "@/opt/oracle/scripts/startup/healthcheck.sql"]
      interval: 30s
      timeout: 10s
      retries: 5

  sshtest:
    build:
      context: ./docker/sshtest
      dockerfile: Dockerfile
    container_name: db_client_sshtest
    environment:
      - SSH_USER=testuser
      - SSH_PASSWORD=testpass
    ports:
      - "2222:22"
    networks:
      - db_client_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/usr/sbin/sshd", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  db_client_network:
    driver: bridge

volumes:
  postgres_data:
  oracle_data: 